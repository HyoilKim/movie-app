{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"uOAQeA,MALf,WAEI,OAAO,0C,gFCkCIC,MAlCf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,qBAAKC,UAAU,gBAAf,SACE,eAAC,IAAD,CAAMC,GAAM,CAEVC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,OAAMC,QAAOC,UAASC,SAAQC,WAJlC,UAME,qBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBR,UAAU,gBAA1B,SAA2CO,GAAlCC,QAGb,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAG,KAAhD,kBCwCKC,G,kNAzDbP,MAAQ,CACNQ,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAWAC,IAAMC,IAAI,yDAXV,gBASEJ,EATF,EAQRK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAbxB,2C,uDAmBZ,WACEQ,KAAKN,c,oBAGP,WAAS,IACAF,EAAaQ,KAAKhB,MAAlBQ,UACP,OACE,yBAASX,UAAU,YAAnB,SACGW,EACC,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGmB,KAAKhB,MAAMS,OAAON,KAAI,SAAAc,GAAK,OAC5B,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,QANTqB,EAAM1B,e,GA1CN4B,IAAMC,YCoBVC,E,uKAjBX,WAAqB,IAAD,EACcL,KAAKM,MAA3BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACKC,IAAnBF,EAASvB,OACTwB,EAAQE,KAAK,O,oBAGrB,WAAU,IACEH,EAAaP,KAAKM,MAAlBC,SAER,OAAIA,EAASvB,MACF,qCAAQuB,EAASvB,MAAMP,MAAvB,OAEA,S,GAbE0B,IAAMC,W,MCaZO,MAhBf,WACI,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,wBCYO8B,MAbf,WACE,OAAO,eAAC,IAAD,WAIL,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW1C,IAEhC,cAAC,IAAD,CAAOwC,KAAK,aAAaE,UAAWV,QCZxCW,IAASC,OACL,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.5cc1a6c1.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nfunction About() {\r\n    // Router의 route는 default props를 지니고 있음\r\n    return <span>about</span>\r\n}\r\n\r\nexport default About;","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./Movie.css\"\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movies__movie\"> \r\n      <Link to = {{\r\n        // pathname: \"/movie-detail\",\r\n        pathname: `/movie/${id}`, \r\n        state: {\r\n          year, title, summary, poster, genres\r\n        }}}>\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">{genre}</li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\"\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\"\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: [] // 초기화 안해도 ok\r\n  };\r\n\r\n  // async, await 를 하지 않으면 js에서 요청을 기다리지 않는다\r\n  getMovies = async () => {\r\n    // es6 적용 x\r\n    // const movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json\")\r\n    // console.log(movies.data.data.movies)\r\n\r\n    // es6 적용\r\n    // axios: fetch 위의 layer(땅콩을 둘러싼 초콜릿)\r\n    const { \r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\")\r\n    // this.setState({movies: movies})\r\n    this.setState({movies, isLoading: false})\r\n\r\n  }\r\n\r\n  // first cycle(when: after first render)\r\n  // fetch data\r\n  componentDidMount(){\r\n    this.getMovies(); \r\n  }\r\n\r\n  render(){\r\n    const {isLoading} = this.state;\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {this.state.movies.map(movie => (\r\n            <Movie \r\n              key={movie.id}\r\n              id={movie.id} \r\n              year={movie.year} \r\n              title={movie.title} \r\n              summary={movie.summary} \r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}\r\n            />\r\n          ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\n// function Detail({ location }) {\r\n//     console.log(location)\r\n//     return <h1>Detail</h1>\r\n// }\r\n\r\nclass Detail extends React.Component{\r\n    componentDidMount() {\r\n        const { location, history } = this.props // class는 props를 가지고 있음\r\n        if (location.state === undefined) {\r\n            history.push(\"/\"); \r\n        }\r\n    }\r\n    render() {\r\n        const { location } = this.props;\r\n        // redirect 할 때 props가 없는 경우 처리\r\n        if (location.state) {\r\n            return <span> {location.state.title} </span>\r\n        } else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail ","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n      <div className=\"nav\">\r\n        <Link to=\"/\"> Home </Link>\r\n        <Link to=\"/about\"> About</Link>\r\n        {/* props로 데이터를 전달하는 방법\r\n            <Link to={{\r\n            pathname:\"/about\",\r\n            state: {\r\n                fromNavigation: true;\r\n            }\r\n        }}/> */}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport { BrowserRouter, HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\"\n\nfunction App(){\n  return <HashRouter>\n    {/* BrowserRouter는 url에 #이 사라지지만 github page에 배포하기 힘듦 */}\n    {/* Navigation 안의 Link는 Router안에 있어야 함 */}\n    {/* movie-detail에 데이터가 전달될 수 있는 이유는 Route에 있기 때문 */}\n    <Navigation/> \n    <Route path=\"/\" exact={true} component={Home}/>\n    <Route path=\"/about\" component={About} />\n    {/* <Route path=\"/movie/moive-detail\" component={Detail}/> */}\n    <Route path=\"/movie/:id\" component={Detail}/>\n  </HashRouter> \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,  document.getElementById('root')\n);\n"],"sourceRoot":""}